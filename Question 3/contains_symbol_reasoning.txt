Loop Invariant:
The invariant here is that the symbol-in-tree function correctly determines whether a 
given symbol is present in the tree.

Initialization:

Base Case: If the tree is empty, the symbol cannot be present, so the function correctly 
returns false.

Maintenance:

Recursive Case: For a non-empty tree, the function checks if the current node matches the symbol. 
If not, it recursively checks the rest of the tree. This ensures that each subtree is evaluated for 
the presence of the symbol, maintaining the invariant.

Termination:

End Case: When the entire tree has been processed, if the symbol was present in any part of the tree, 
it will be correctly identified. The loop terminates once all nodes are checked, and the function 
correctly reports whether the symbol was found.